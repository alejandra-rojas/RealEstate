/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PropertiesImport } from './routes/properties'
import { Route as IndexImport } from './routes/index'
import { Route as PropertyIdImport } from './routes/property/$id'

// Create/Update Routes

const PropertiesRoute = PropertiesImport.update({
  path: '/properties',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PropertyIdRoute = PropertyIdImport.update({
  path: '/property/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/properties': {
      id: '/properties'
      path: '/properties'
      fullPath: '/properties'
      preLoaderRoute: typeof PropertiesImport
      parentRoute: typeof rootRoute
    }
    '/property/$id': {
      id: '/property/$id'
      path: '/property/$id'
      fullPath: '/property/$id'
      preLoaderRoute: typeof PropertyIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  PropertiesRoute,
  PropertyIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/properties",
        "/property/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/properties": {
      "filePath": "properties.tsx"
    },
    "/property/$id": {
      "filePath": "property/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
